"""Initial

Revision ID: 212ef42e8a31
Revises: 92405fc863a5
Create Date: 2025-06-23 03:26:02.078664

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '212ef42e8a31'
down_revision = '92405fc863a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('guide_id', sa.Integer(), nullable=False),
    sa.Column('answer_filename', sa.String(length=255), nullable=True),
    sa.Column('graded_image', sa.String(length=255), nullable=True),
    sa.Column('report_filename', sa.String(length=255), nullable=True),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['guide_id'], ['marking_guide.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_number', sa.Integer(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('student_answer', sa.Text(), nullable=True),
    sa.Column('expected_answer', sa.Text(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['student_submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('student_submission')
    with op.batch_alter_table('marking_guide', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('teacher_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint(batch_op.f('marking_guide_uploaded_by_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['teacher_id'], ['id'])
        batch_op.drop_column('uploaded_by')
        batch_op.drop_column('guide_text')
        batch_op.drop_column('upload_date')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('registered_on', sa.DateTime(), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=128),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.drop_column('registered_on')

    with op.batch_alter_table('marking_guide', schema=None) as batch_op:
        batch_op.add_column(sa.Column('upload_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('guide_text', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('uploaded_by', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('marking_guide_uploaded_by_fkey'), 'user', ['uploaded_by'], ['id'])
        batch_op.drop_column('teacher_id')
        batch_op.drop_column('created_at')
        batch_op.drop_column('title')

    op.create_table('student_submission',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('upload_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('guide_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('grade', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('marked_file_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('per_question_scores', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['guide_id'], ['marking_guide.id'], name=op.f('student_submission_guide_id_fkey')),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], name=op.f('student_submission_student_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('student_submission_pkey'))
    )
    op.drop_table('result')
    op.drop_table('student_submissions')
    # ### end Alembic commands ###
