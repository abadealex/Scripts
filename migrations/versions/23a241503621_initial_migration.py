"""Initial migration

Revision ID: 23a241503621
Revises: 
Create Date: 2025-07-30 20:05:02.835877

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '23a241503621'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=100), nullable=False),
    sa.Column('grade_level', sa.String(length=100), nullable=False),
    sa.Column('guide_path', sa.String(length=255), nullable=True),
    sa.Column('rubric_path', sa.String(length=255), nullable=True),
    sa.Column('answered_script_path', sa.String(length=255), nullable=True),
    sa.Column('question_paper_path', sa.String(length=255), nullable=True),
    sa.Column('student_ids_path', sa.String(length=255), nullable=False),
    sa.Column('attendance_path', sa.String(length=255), nullable=True),
    sa.Column('presence_csv_path', sa.String(length=255), nullable=True),
    sa.Column('exam_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reviewed_by_teacher', sa.Boolean(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ocr_override_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pdf_path', sa.String(), nullable=False),
    sa.Column('old_name', sa.String(), nullable=True),
    sa.Column('old_id', sa.String(), nullable=True),
    sa.Column('new_name', sa.String(), nullable=True),
    sa.Column('new_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('page_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('page_num', sa.Integer(), nullable=False),
    sa.Column('is_front_page', sa.Boolean(), nullable=False),
    sa.Column('reviewed_by', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('test')
    op.drop_table('user')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('audit_logs_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('bulk_upload', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('bulk_upload_test_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'tests', ['test_id'], ['id'])

    with op.batch_alter_table('extracted_student_script', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('extracted_student_script_test_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'tests', ['test_id'], ['id'])

    with op.batch_alter_table('marking_guide', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('marking_guide_teacher_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('marking_guide_test_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['teacher_id'], ['id'])
        batch_op.create_foreign_key(None, 'tests', ['test_id'], ['id'])

    with op.batch_alter_table('ocr_submission', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('ocr_submission_reviewed_by_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['reviewed_by'], ['id'])

    with op.batch_alter_table('student_submissions', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('student_submissions_teacher_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('student_submissions_test_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('student_submissions_student_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'tests', ['test_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['teacher_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['student_id'], ['id'])

    with op.batch_alter_table('test_script', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('test_script_test_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'tests', ['test_id'], ['id'])

    with op.batch_alter_table('test_submissions', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('test_submissions_student_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('test_submissions_test_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['student_id'], ['id'])
        batch_op.create_foreign_key(None, 'tests', ['test_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test_submissions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('test_submissions_test_id_fkey'), 'test', ['test_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('test_submissions_student_id_fkey'), 'user', ['student_id'], ['id'])

    with op.batch_alter_table('test_script', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('test_script_test_id_fkey'), 'test', ['test_id'], ['id'])

    with op.batch_alter_table('student_submissions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('student_submissions_student_id_fkey'), 'user', ['student_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('student_submissions_test_id_fkey'), 'test', ['test_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('student_submissions_teacher_id_fkey'), 'user', ['teacher_id'], ['id'])

    with op.batch_alter_table('ocr_submission', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('ocr_submission_reviewed_by_fkey'), 'user', ['reviewed_by'], ['id'])

    with op.batch_alter_table('marking_guide', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('marking_guide_test_id_fkey'), 'test', ['test_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('marking_guide_teacher_id_fkey'), 'user', ['teacher_id'], ['id'])

    with op.batch_alter_table('extracted_student_script', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('extracted_student_script_test_id_fkey'), 'test', ['test_id'], ['id'])

    with op.batch_alter_table('bulk_upload', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('bulk_upload_test_id_fkey'), 'test', ['test_id'], ['id'])

    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('audit_logs_user_id_fkey'), 'user', ['user_id'], ['id'])

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('registered_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='user_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('test',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('grade_level', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('guide_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('rubric_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('exam_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_locked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('answered_script_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('question_paper_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('student_ids_path', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('attendance_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('presence_csv_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], name=op.f('test_teacher_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('test_pkey'))
    )
    op.drop_table('page_reviews')
    op.drop_table('ocr_override_logs')
    op.drop_table('tests')
    op.drop_table('users')
    # ### end Alembic commands ###
