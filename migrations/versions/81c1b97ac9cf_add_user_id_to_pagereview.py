"""Add user_id to PageReview

Revision ID: 81c1b97ac9cf
Revises: 208ece7db2a9
Create Date: 2025-08-01 19:11:20.599711

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '81c1b97ac9cf'
down_revision = '208ece7db2a9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bulk_uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('class_list_filename', sa.String(length=255), nullable=True),
    sa.Column('combined_scripts_filename', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extracted_scripts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('extracted_pdf_path', sa.String(length=512), nullable=False),
    sa.Column('ocr_name', sa.String(length=255), nullable=True),
    sa.Column('ocr_student_id', sa.String(length=50), nullable=True),
    sa.Column('ocr_confidence', sa.Float(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('is_absent', sa.Boolean(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.Column('bulk_upload_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bulk_upload_id'], ['bulk_uploads.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('extracted_student_script')
    op.drop_table('bulk_upload')
    op.drop_table('audit_logs')
    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.alter_column('test_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('graded_scripts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('grader_type', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('grade', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('rubric_scores', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('overlay_data', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('confidence', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_unique_constraint(None, ['submission_id'])
        batch_op.drop_column('graded_pdf_path')
        batch_op.drop_column('score')

    with op.batch_alter_table('page_reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('extracted_script_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('page_number', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('review_comment', sa.String(length=500), nullable=True))
        batch_op.add_column(sa.Column('confidence_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('reviewer_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('reviewed_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('override_flag', sa.Boolean(), nullable=True))
        batch_op.alter_column('is_front_page',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('page_reviews_reviewed_by_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('page_reviews_test_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'extracted_scripts', ['extracted_script_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['reviewer_id'], ['id'])
        batch_op.drop_column('page_num')
        batch_op.drop_column('test_id')
        batch_op.drop_column('timestamp')
        batch_op.drop_column('reviewed_by')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('page_reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reviewed_by', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('test_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('page_num', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('page_reviews_test_id_fkey'), 'tests', ['test_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('page_reviews_reviewed_by_fkey'), 'users', ['reviewed_by'], ['id'])
        batch_op.alter_column('is_front_page',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.drop_column('override_flag')
        batch_op.drop_column('reviewed_at')
        batch_op.drop_column('reviewer_id')
        batch_op.drop_column('confidence_score')
        batch_op.drop_column('review_comment')
        batch_op.drop_column('page_number')
        batch_op.drop_column('extracted_script_id')

    with op.batch_alter_table('graded_scripts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('graded_pdf_path', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('confidence')
        batch_op.drop_column('overlay_data')
        batch_op.drop_column('rubric_scores')
        batch_op.drop_column('grade')
        batch_op.drop_column('grader_type')

    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.alter_column('test_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('audit_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('submission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['ocr_submission.id'], name=op.f('audit_logs_submission_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('audit_logs_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('audit_logs_pkey'))
    )
    op.create_table('bulk_upload',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('original_combined_pdf', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('original_class_list', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('processed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], name=op.f('bulk_upload_test_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('bulk_upload_pkey'))
    )
    op.create_table('extracted_student_script',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('student_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('student_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('page_range', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('script_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], name=op.f('extracted_student_script_test_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('extracted_student_script_pkey'))
    )
    op.drop_table('extracted_scripts')
    op.drop_table('bulk_uploads')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
